{"version":3,"sources":["components/UI/Card.js","components/Products/ProductForm.js","components/Products/Search.js","components/Products/ProductList.js","components/Products/Products.js","context/Auth-context.js","components/Auth.js","App.js","index.js"],"names":["Card","props","className","children","ProductForm","React","memo","useState","title","setTitle","amount","setAmount","onSubmit","event","preventDefault","onAddProduct","htmlFor","type","id","value","onChange","target","Search","onLoadProducts","searchItem","setSearchItem","inputRef","useRef","useEffect","setTimeout","current","query","length","fetch","then","response","json","responseData","loadedProducts","item","push","slice","ref","ProductList","products","map","onClick","onRemoveItem","bind","productReducer","state","action","Error","Products","useReducer","dispath","searchProductHandler","useCallback","items","method","body","JSON","stringify","headers","name","AuthContext","createContext","isAuth","login","AuthContextProvider","isLoggedIn","setIsLoggedIn","Provider","Auth","authContext","useContext","App","content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a9e59bc.chunk.js","sourcesContent":["import React from 'react'\n\nimport './Card.css'\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>\n}\n\nexport default Card\n","import React , {useState} from 'react'\n\nimport Card from '../UI/Card'\n\nimport './ProductForm.css'\n\nconst ProductForm = React.memo((props) => {\n\nconst [title,setTitle] = useState('')\nconst [amount,setAmount] = useState('')\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    props.onAddProduct({title:title , amount:amount})\n  }\n\n  return (\n    <section className=\"product-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" value={title} onChange={(event)=>setTitle(event.target.value)}  />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input type=\"number\" id=\"amount\" value={amount} onChange={(event)=>setAmount(event.target.value )}/>\n          </div>\n          <div className=\"product-form__actions\">\n            <button type=\"submit\">Add</button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  )\n})\n\nexport default ProductForm\n","import React from 'react'\nimport Card from '../UI/Card'\nimport {useState , useEffect ,useRef } from 'react'\nimport './Search.css'\n\n\n\nconst Search = React.memo((props) => {\n\nconst {onLoadProducts}=props\n\n  const [searchItem,setSearchItem]=useState('')\n  const inputRef=useRef()\n\n  useEffect(()=>{\n\n    setTimeout(()=>{\n\n      if(searchItem === inputRef.current.value){\n        \n      const query= searchItem.length===0? '' :\n      `?equalTo=\"${searchItem}\"`\n  \n  \n      fetch('https://jsonplaceholder.typicode.com/posts' + query).then\n      ((response)=> {return response.json()}).then((responseData)=>{\n   const loadedProducts=[]\n   for(const item in responseData){\n     loadedProducts.push({\n       id:item,\n       title:responseData[item].title,\n       amount:responseData[item].amount,\n     })\n   }\n   \n  onLoadProducts(loadedProducts.slice(1,4))\n      })\n      }\n\n\n    } , 500)\n\n  } , [searchItem,onLoadProducts , inputRef])\n\n\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Search</label>\n          <input type=\"text\" \n          ref={inputRef}\n          value={searchItem} \n          onChange={(event)=>setSearchItem(event.target.value)} />\n        </div>\n      </Card>\n    </section>\n  )\n})\n\nexport default Search\n","import React from 'react'\n\nimport './ProductList.css'\n\nconst ProductList = (props) => {\n  return (\n    <section className=\"product-list\">\n      <h2>Products</h2>\n      <ul>\n        {props.products.map((item) => (\n          <li key={item.id} onClick={props.onRemoveItem.bind(this, item.id)}>\n            <span>{item.title}</span>\n            <span>{item.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default ProductList\n","import React, { useCallback , useReducer} from 'react'\n\nimport ProductForm from './ProductForm'\nimport Search from './Search'\nimport ProductList from './ProductList'\n\nconst productReducer=(state , action)=>{\n\n  switch (action.type){\n    case 'SET': return action.products \n    case 'ADD': return [...state,action.products]\n    default:\n      throw new Error ('Error')\n  \n  }\n  \n  \n  \n  }\n\nconst Products=()=> {\n // const [products,setProducts]=useState([])\n  const [products,dispath]=useReducer(productReducer, [])\n  \n\n\n\nconst searchProductHandler=useCallback((items)=>{\n  //setProducts(items)},[])\n\n  dispath({type:'SET' , products:items}) },[])\n\n\n\n  const addProductHandler=(item)=>{\n\n    \n\n  fetch('https://jsonplaceholder.typicode.com/posts', {\n    method:'POST',\n    body:JSON.stringify(item),\n    headers:{'Content-Type':'application/json;charset=UTF-8'},\n  }).then((response)=> response.json().then((responseData)=>{\n    // setProducts((prevState)=>{\n    //   return[\n    //     ...prevState , {\n    //       id: responseData.name,\n    //       ...item\n    //     }\n    //   ]\n    //       })\n\n    dispath({\n      type:'ADD' , products:{id:responseData.name , ...item},\n    })\n\n  })\n  \n)\n\n}\n\n\n  return (\n    <div className=\"App\">\n      <ProductForm onAddProduct={addProductHandler}/>\n      <section>\n        <Search onLoadProducts={searchProductHandler} />\n        <ProductList products={products} onRemoveItem={()=>{}} />\n      </section>\n\n    </div>\n  )\n\n}\n  \nexport default Products\n","import React , {useState} from 'react'\r\n\r\nexport const AuthContext=React.createContext({\r\n\r\nisAuth :false,\r\nlogin:() => {}\r\n\r\n})\r\n\r\n\r\nconst AuthContextProvider =(props) =>{\r\n    const [isLoggedIn, setIsLoggedIn] =useState(false)\r\n\r\n    const loginHandler=() =>\r\n    {\r\n        setIsLoggedIn(true)\r\n    }\r\n    return(\r\n        <AuthContext.Provider value={{\r\n            \r\n            isAuth :isLoggedIn,\r\n            login:loginHandler\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider","import React,{useContext} from 'react'\n\nimport Card from './UI/Card'\nimport {AuthContext} from '../context/Auth-context'\nimport './Auth.css'\n\nconst Auth = (props) => {\n  const authContext=useContext(AuthContext)\n  const loginHandler = () => {\n    authContext.login()\n  }\n\n  return (\n    <div className=\"auth\">\n      <Card>\n        <p>Please login to continue</p>\n        <button onClick={loginHandler}>Login</button>\n      </Card>\n    </div>\n  )\n}\n\nexport default Auth\n","import React ,{useContext} from 'react'\n\nimport Products from './components/Products/Products'\nimport Auth from './components/Auth'\nimport {AuthContext} from './context/Auth-context'\n\nconst App = (props) => {\n  const authContext = useContext(AuthContext)\nlet content=<Auth/>\n  if (authContext.isAuth){\ncontent=<Products/>\n  }\n  return content\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport AuthContextProvider from './context/Auth-context'\n\nReactDOM.render(\n\n<AuthContextProvider>\n<App/>\n</AuthContextProvider>\n\n, document.getElementById('root'))\n"],"sourceRoot":""}